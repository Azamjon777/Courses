<resources>
    <string name="app_name">Cursos</string>
    <string name="skip">Saltar</string>
    <string name="start">Comenzar</string>
    <string name="desc3">¡Aprender se ha vuelto más fácil e interesante! Alcance nuevas alturas en conocimiento con nuestra aplicación.</string>
    <string name="desc2">Aquí encontrará cursos interesantes y pondrá a prueba sus conocimientos con pruebas interactivas.</string>
    <string name="desc1">¡Esta es una aplicación educativa con pruebas!</string>
    <string name="title1">¡Bienvenido!</string>
    <string name="test">prueba</string>
    <string name="start_training_now">Empieza a entrenar ahora</string>
    <string name="study_the">Estudia el curso y haz el examen.</string>
    <string name="basic_desc1">Investigación de mercado: Comprender las necesidades y deseos del público objetivo a través de estudios de mercado y análisis de la competencia.\nPúblico objetivo: Identificación de segmentos de mercado específicos que son más prometedores para un producto o servicio.\nMarketing 4P: Gestión del producto, precio, promoción y lugar de distribución del producto.\nSegmentación y posicionamiento: resaltar las características únicas de un producto y crear una imagen única a los ojos de los consumidores.\nMarketing online: utilizar canales online para promocionar un producto, como sitios web, redes sociales, correo electrónico y marketing de contenidos .\nAnálisis y medición: evaluar la efectividad de las campañas de marketing utilizando métricas y herramientas analíticas.\nComunicación y compromiso: establecer conexiones con los clientes a través de diversos canales de comunicación y mantener relaciones a largo plazo.\nAdaptar y mejorar: actualizar y mejorar continuamente las estrategias de marketing basadas sobre la retroalimentación y los cambios en el mercado.</string>
    <string name="basic_title1">Fundamentos del marketing en redes sociales</string>
    <string name="basic_title2">Conceptos básicos de programación en Python</string>
    <string name="basic_title3">Magia web: creación de sitios web atractivos e interactivos</string>
    <string name="basic_desc2">Python es un lenguaje de programación interpretado de alto nivel conocido por su simplicidad y sintaxis limpia. La escritura dinámica es una de las características clave de Python, lo que significa que no es necesario declarar tipos de datos variables explícitamente. Las declaraciones de Python suelen terminar con un carácter de nueva línea, lo que mejora la legibilidad del código. Las variables se declaran con una asignación simple y sus tipos se determinan automáticamente en tiempo de ejecución. Python admite varias estructuras de datos, incluidas listas, tuplas, conjuntos y diccionarios. Los programas suelen comenzar con una función main(), que sirve como punto de entrada. Las declaraciones condicionales, como if, elif y else, permiten la toma de decisiones en Python. Los bucles, como for y while, facilitan acciones repetitivas. Python cuenta con una extensa biblioteca estándar de módulos con numerosas funciones y herramientas. También admite programación orientada a objetos (OOP), lo que lo convierte en un lenguaje versátil y potente para el desarrollo de aplicaciones.</string>
    <string name="basic_desc3">\\"Web Magic\\" se refiere al arte y la ciencia de crear sitios web cautivadores e interactivos. La creación de un sitio web atractivo comienza con un diseño bien pensado, incluido el diseño y la combinación de colores. Los elementos visuales como gráficos, imágenes y multimedia mejoran el atractivo del sitio web. La navegación eficaz garantiza que los usuarios puedan encontrar información fácilmente. La interactividad se logra a través de funciones como formularios, botones y contenido dinámico. El diseño responsivo garantiza que el sitio web se vea bien en todos los dispositivos. Las técnicas de SEO mejoran la visibilidad del sitio en los resultados de búsqueda. La accesibilidad es importante para todos los usuarios, incluidos aquellos con discapacidades. La seguridad web es vital para proteger los datos de los usuarios. Las pruebas y la optimización continuas mantienen el sitio web actualizado y fácil de usar.</string>
    <string name="popular_course">Curso popular</string>
    <string name="course">Curso</string>
    <string name="fundamentals_of_social_media_marketing">Fundamentos del marketing en redes sociales</string>
    <string name="operator_for_commenting_lines_in_python">¿Operador para comentar líneas en Python\?</string>
    <string name="keyword_for_declaring_a_variable_in_python">¿Palabra clave para declarar una variable en Python\?</string>
    <string name="function_for_displaying_text_on_the_screen_in_python">¿Función para mostrar texto en pantalla en Python\?</string>
    <string name="keyword_for_conditional_statements_in_python">¿Palabra clave para declaraciones condicionales en Python\?</string>
    <string name="data_type_for_creating_a_list_in_python">¿Tipo de datos para crear una lista en Python\?</string>
    <string name="_rew">#</string>
    <string name="var1">era</string>
    <string name="print">imprimir</string>
    <string name="if1">si</string>
    <string name="list">lista</string>
    <string name="let">dejar</string>
    <string name="const1">constante</string>
    <string name="fun1">divertido</string>
    <string name="write">escribir</string>
    <string name="echo">eco</string>
    <string name="display">mostrar</string>
    <string name="for1">para</string>
    <string name="while1">mientras</string>
    <string name="switch1">cambiar</string>
    <string name="array">formación</string>
    <string name="tuple">tupla</string>
    <string name="set">set</string>
    <string name="what_is_kotlin">What is Kotlin?</string>
    <string name="how_to_declare_a_variable_in_kotlin">How to declare a variable in Kotlin?</string>
    <string name="how_to_create_a_function_in_kotlin">How to create a function in Kotlin?</string>
    <string name="what_is_null_safety_in_kotlin">What is Null Safety in Kotlin?</string>
    <string name="which_operator_is_used_for_conditional_operations_in_kotlin">Which operator is used for conditional operations in Kotlin?</string>
    <string name="programming_language">Programming language</string>
    <string name="val_or_var">val or var</string>
    <string name="null_safety_mechanism">Null safety mechanism</string>
    <string name="interpreter">Interpreter</string>
    <string name="compiler">Compiler</string>
    <string name="ide">IDE</string>
    <string name="function">function</string>
    <string name="def">def</string>
    <string name="procedure">procedure</string>
    <string name="a_mechanism_for_ensuring_safety_against_null_values">A mechanism for ensuring safety against null values</string>
    <string name="null_check_operator">Null check operator</string>
    <string name="exceptions">Exceptions</string>
    <string name="smart_pointers">Smart pointers</string>
    <string name="what_is_c">What is C++?</string>
    <string name="how_to_declare_a_variable_in_c">How to declare a variable in C++?</string>
    <string name="how_to_create_a_function_in_c">How to create a function in C++?</string>
    <string name="what_is_a_pointer_in_c">What is a pointer in C++?</string>
    <string name="which_operator_is_used_to_perform_looping_operations_in_c">Which operator is used to perform looping operations in C++?</string>
    <string name="variable_type_variable_name">Variable type variable name;</string>
    <string name="return_type_function_name">Return type function name() { }</string>
    <string name="a_variable_that">A variable that stores the address of another variable</string>
    <string name="void_functionname">void functionName() { }</string>
    <string name="pointer">Pointer</string>
    <string name="link">Link</string>
    <string name="kotlin">Kotlin</string>
    <string name="c">C++</string>
    <string name="python">Python</string>
</resources>